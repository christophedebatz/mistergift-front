'use strict';

/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const autoprefixer = require('autoprefixer');
const baseConf = require('./webpack.base');

let conf = baseConf({
    // Add hot reloading in development
    entry: [
        'webpack-dev-server/client?http://0.0.0.0:3000', // WebpackDevServer host and port
        path.join(process.cwd(), 'app/app.js') // Start with js/app.js
    ],

    // Don't use hashes in dev mode for better performance
    output: {
        filename: '[name].js',
        chunkFilename: '[name].chunk.js',
    },

    // Load the CSS in a style tag in development
    cssLoaders: ExtractTextPlugin.extract({
        fallbackLoader: 'style-loader',
        loader: 'css-loader?sourceMap&modules&importLoaders=1&localIdentName=[local]!postcss-loader!sass-loader'
    }),

    // Process the CSS with PostCSS
    postcssPlugins: [
        autoprefixer({
            browsers: ['last 2 versions', 'IE > 10']
        })
    ],

    // Add hot reloading
    plugins: [
        new webpack.NoErrorsPlugin(),
        new ExtractTextPlugin('[name].css'),
        new HtmlWebpackPlugin({
            template: 'app/index.html',
            inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
            minify: { // Minifying it while it is parsed using the following, selfâ€“explanatory options
                minifyJS: true,
                minifyCSS: true
            }
        }),
    ],

    // Emit a source map for easier debugging
    devtool: 'cheap-module-eval-source-map',
});

module.exports = conf;
